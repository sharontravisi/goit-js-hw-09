{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAUMC,EAAuBC,SAASC,cAAc,QAI9CC,EAAaF,SAASC,cAAc,oBAIpCE,EAAYH,SAASC,cAAc,mBAInCG,EAAcJ,SAASC,cAAc,qBAKzBD,SAASC,cAAc,UAOzC,SAASI,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAEpCC,QAAQC,QAAQ,CAAEL,WAAUC,UAASK,MAAK,SAAAC,G,IAAGC,EAAQD,EAARP,SAAUS,EAAKF,EAALN,MACrDV,EAAAmB,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,IAG/DL,QAAQS,OAAO,CAAEb,WAAUC,UAASa,OAAM,SAAAP,G,IAAGC,EAAQD,EAARP,SAAUS,EAAKF,EAALN,MACrDV,EAAAmB,OAAOK,QAAQ,sBAAqCH,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,IAgChEhB,EAAqBuB,iBAAiB,UAvBjB,SAAAC,GACnBA,EAAMC,iBACN,IAAIjB,EAAQkB,OAAOvB,EAAWwB,OACxBC,EAAOF,OAAOtB,EAAUuB,OACxBE,EAASH,OAAOrB,EAAYsB,OAC9BpB,EAAW,EACfuB,YAAW,WAETxB,IADAC,EACuBC,GACvB,IAAMuB,EAAUC,aAAY,WAG1B1B,IAFAC,EACAC,GAAOoB,GAEJrB,GAAUsB,GACXI,cAAcF,E,GAEhBH,E,GACFpB,E,IAYJL,EAAW+B,MAAMC,QAAU,QAC3B/B,EAAU8B,MAAMC,QAAU,QAC1B9B,EAAY6B,MAAMC,QAAU,QAC5BnC,EAAqBkC,MAAMC,QAAU,OACrCnC,EAAqBkC,MAAME,IAAM,OACjCpC,EAAqBkC,MAAMG,WAAa,U","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\n\n/**\n * Para mostrar las notificaciones al usuario en lugar de console.log() se usa la biblioteca notiflix.\n */\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n/**\n * Selector del elemento formulario\n */\nconst formPromiseGenerator = document.querySelector('form');\n/**\n * Selector del campo Delay\n */\nconst inputDelay = document.querySelector('[name = \"delay\"]');\n/**\n * Selector del campo Step\n */\nconst inputStep = document.querySelector('[name = \"step\"]');\n/**\n * Selector del campo Amount\n */\nconst inputAmount = document.querySelector('[name = \"amount\"]');\n/**\n * Selector boton de envio del formulario\n */\n\nconst btnSubmit = document.querySelector('button');\n\n/**\n * Funcion para crear las promesas\n * @param {*} position\n * @param {*} delay\n */\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    Promise.resolve({ position, delay }).then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    });\n  } else {\n    Promise.reject({ position, delay }).catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  }\n}\n\n/**\n * Funcion manejadora de los eventos submit\n * @param {*} event\n */\nconst handleSubmit = event => {\n  event.preventDefault();\n  let delay = Number(inputDelay.value);\n  const step = Number(inputStep.value);\n  const amount = Number(inputAmount.value);\n  let position = 0;\n  setTimeout(()=>{\n    position++;\n    createPromise(position,delay);\n    const timerId = setInterval(()=>{\n      position++;\n      delay+=step;\n      createPromise(position,delay)\n      if(position>=amount){\n        clearInterval(timerId);\n      }\n    },step);\n  },delay);\n};\n\n/**\n * Evento submit que al enviar el formulario\n */\nformPromiseGenerator.addEventListener('submit', handleSubmit);\n\n/**\n * ESTILOS CSS DEL FORMULARIO\n */\n\ninputDelay.style.display = \"block\";\ninputStep.style.display = \"block\";\ninputAmount.style.display = \"block\";\nformPromiseGenerator.style.display = \"flex\";\nformPromiseGenerator.style.gap = \"10px\";\nformPromiseGenerator.style.alignItems = \"flex-end\""],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formPromiseGenerator","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Math","random","Promise","resolve","then","param","_$position","_$delay","Notify","success","concat","reject","catch","failure","addEventListener","event","preventDefault","Number","value","step","amount","setTimeout","timerId","setInterval","clearInterval","style","display","gap","alignItems"],"version":3,"file":"03-promises.9fd53515.js.map"}